{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\Downloads\\\\appointment-planner-app\\\\starting_code\\\\src\\\\components\\\\contactForm\\\\ContactForm.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactForm = _ref => {\n  let {\n    name,\n    setName,\n    phone,\n    setPhone,\n    email,\n    setEmail,\n    handleSubmit\n  } = _ref;\n  const handleChangeName = e => {\n    setName(e.target);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSumbit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: name,\n        children: [\"onChangeName =\", handleChangeName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"phone\",\n        children: \"Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\",\n        name: \"phone\",\n        value: phone,\n        children: [\"onChangePhone =\", handleChangePhone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"E-mail:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        name: \"email\",\n        value: phone,\n        children: [\"onChangeEmail =\", handleChangeEmail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactForm","_ref","name","setName","phone","setPhone","email","setEmail","handleSubmit","handleChangeName","e","target","children","Form","onSumbit","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","handleChangePhone","handleChangeEmail","_c","$RefreshReg$"],"sources":["C:/Users/urdan/Downloads/appointment-planner-app/starting_code/src/components/contactForm/ContactForm.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n\r\n  const handleChangeName = (e)=>{\r\n    setName(e.target)\r\n  }\r\n  return (\r\n    <>\r\n      <Form onSumbit ={handleSubmit}>\r\n        <label for=\"name\">Name:</label>\r\n        <input \r\n          type=\"text\" \r\n          id= \"name\"\r\n          name= \"name\"\r\n          value={name}>\r\n          onChangeName ={handleChangeName}\r\n        </input>\r\n        <label for=\"phone\">Phone Number:</label>\r\n        <input \r\n          type=\"text\" \r\n          id= \"phone\"\r\n          name= \"phone\"\r\n          value={phone}>\r\n          onChangePhone ={handleChangePhone}\r\n        </input>\r\n        <label for=\"email\">E-mail:</label>\r\n        <input \r\n          type=\"text\" \r\n          id= \"email\"\r\n          name= \"email\"\r\n          value={phone}>\r\n          onChangeEmail ={handleChangeEmail}\r\n        </input>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAQrB;EAAA,IARsB;IAC1BC,IAAI;IACJC,OAAO;IACPC,KAAK;IACLC,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRC;EACF,CAAC,GAAAP,IAAA;EAEC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAG;IAC5BP,OAAO,CAACO,CAAC,CAACC,MAAM,CAAC;EACnB,CAAC;EACD,oBACEd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA,CAACgB,IAAI;MAACC,QAAQ,EAAGN,YAAa;MAAAI,QAAA,gBAC5Bf,OAAA;QAAOkB,GAAG,EAAC,MAAM;QAAAH,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC/BtB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAE,MAAM;QACVnB,IAAI,EAAE,MAAM;QACZoB,KAAK,EAAEpB,IAAK;QAAAU,QAAA,GAAC,gBACC,EAACH,gBAAgB;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB,eACRtB,OAAA;QAAOkB,GAAG,EAAC,OAAO;QAAAH,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACxCtB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAE,OAAO;QACXnB,IAAI,EAAE,OAAO;QACboB,KAAK,EAAElB,KAAM;QAAAQ,QAAA,GAAC,iBACC,EAACW,iBAAiB;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B,eACRtB,OAAA;QAAOkB,GAAG,EAAC,OAAO;QAAAH,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAClCtB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAE,OAAO;QACXnB,IAAI,EAAE,OAAO;QACboB,KAAK,EAAElB,KAAM;QAAAQ,QAAA,GAAC,iBACC,EAACY,iBAAiB;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH,iBACN;AAEP,CAAC;AAACM,EAAA,GA3CWzB,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}