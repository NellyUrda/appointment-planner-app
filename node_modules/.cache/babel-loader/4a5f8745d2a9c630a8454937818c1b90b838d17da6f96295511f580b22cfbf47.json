{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\urdan\\\\Downloads\\\\appointment-planner-app\\\\starting_code\\\\src\\\\containers\\\\contactsPage\\\\ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\n\n//primeste props de la  parent App\n// are children ContactForm + TileList\n//props pt TileList : contacts, care l-a primit de la parent\n//props pt ContactForm : name, setName...handleSubmit (foloseste addContact de la parent)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = _ref => {\n  _s();\n  let {\n    contacts,\n    addContact\n  } = _ref;\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\n  // astea le vom introduce in formular, de aici din parent controla state of form\n  // astea trebuiau declarate in ContactForms, dar folosim separate of concerns\n  const [name, setName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\n    // aici verifcam daca deja in contacts este noul contact ce vrem sa-l adaugam, nu in functia\n    // addContact. pt ca inainte sa apasam butonul verificam\n    for (let i = 0; i < contacts.length; i++) {}\n    if (contacts.includes(name) === false) {\n      addContact(name, phone, email);\n    }\n\n    // clear data after submision\n    setName(\"\");\n    setPhone(\"\");\n    setEmail(\"\");\n    console.log(\"contacts after submit:\");\n    console.log(contacts);\n  };\n\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        name: name,\n        setName: setName,\n        phone: phone,\n        setPhone: setPhone,\n        email: email,\n        setEmail: setEmail,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        datasInputs: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"Mrf1y34Ftlwj+wyVi89KU2XV+Uc=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","ContactsPage","_ref","_s","contacts","addContact","name","setName","phone","setPhone","email","setEmail","handleSubmit","e","preventDefault","i","length","includes","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","datasInputs","_c","$RefreshReg$"],"sources":["C:/Users/urdan/Downloads/appointment-planner-app/starting_code/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\n\r\n//primeste props de la  parent App\r\n// are children ContactForm + TileList\r\n//props pt TileList : contacts, care l-a primit de la parent\r\n//props pt ContactForm : name, setName...handleSubmit (foloseste addContact de la parent)\r\nexport const ContactsPage = ({contacts, addContact}) => {\r\n  /*\r\n  Define state variables for \r\n  contact info and duplicate check\r\n  */\r\n // astea le vom introduce in formular, de aici din parent controla state of form\r\n // astea trebuiau declarate in ContactForms, dar folosim separate of concerns\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data\r\n    if the contact name is not a duplicate\r\n    */\r\n   // aici verifcam daca deja in contacts este noul contact ce vrem sa-l adaugam, nu in functia\r\n   // addContact. pt ca inainte sa apasam butonul verificam\r\n    for (let i=0; i<contacts.length ; i++){\r\n        \r\n    }\r\n    if(contacts.includes(name)===false){\r\n      addContact(name, phone, email);\r\n    }\r\n  \r\n    // clear data after submision\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n    setEmail(\"\");\r\n    console.log(\"contacts after submit:\");\r\n    console.log(contacts);\r\n\r\n    \r\n    \r\n  };\r\n\r\n  /*\r\n  Using hooks, check for contact name in the \r\n  contacts array variable in props\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2> \r\n        <ContactForm \r\n            name= {name} \r\n            setName={setName} \r\n            phone={phone} \r\n            setPhone={setPhone} \r\n            email={email} \r\n            setEmail={setEmail} \r\n            handleSubmit={handleSubmit} \r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList datasInputs={contacts}/>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,QAAQ,QAAQ,oCAAoC;;AAG7D;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAACC,QAAQ;IAAEC;EAAU,CAAC,GAAAH,IAAA;EACjD;AACF;AACA;AACA;EACC;EACA;EACC,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMiB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB;AACJ;AACA;AACA;IACG;IACA;IACC,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACX,QAAQ,CAACY,MAAM,EAAGD,CAAC,EAAE,EAAC,CAEtC;IACA,IAAGX,QAAQ,CAACa,QAAQ,CAACX,IAAI,CAAC,KAAG,KAAK,EAAC;MACjCD,UAAU,CAACC,IAAI,EAAEE,KAAK,EAAEE,KAAK,CAAC;IAChC;;IAEA;IACAH,OAAO,CAAC,EAAE,CAAC;IACXE,QAAQ,CAAC,EAAE,CAAC;IACZE,QAAQ,CAAC,EAAE,CAAC;IACZO,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCD,OAAO,CAACC,GAAG,CAACf,QAAQ,CAAC;EAIvB,CAAC;;EAED;AACF;AACA;AACA;;EAEE,oBACEJ,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACpBxB,OAAA,CAACH,WAAW;QACRS,IAAI,EAAGA,IAAK;QACZC,OAAO,EAAEA,OAAQ;QACjBC,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAEA,QAAS;QACnBC,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAEA,QAAS;QACnBC,YAAY,EAAEA;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM,eACVxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNxB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACjBxB,OAAA,CAACF,QAAQ;QAAC2B,WAAW,EAAErB;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV,CAAC;AAACrB,EAAA,CA/DWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}